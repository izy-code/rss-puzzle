"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[960],{514:(f,d,s)=>{s.d(d,{A:()=>r});var m=s(256);function r({className:h,textContent:g="",buttonType:c="button",clickHandler:p}){return new m.A({tag:"button",className:h,textContent:g,type:c,onclick:p})}},960:(f,d,s)=>{s.r(d),s.d(d,{default:()=>u});var m=s(256),r=s(734),h=s(514),g=Object.defineProperty,c=(i,t,e)=>t in i?g(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e,p=(i,t,e)=>(c(i,typeof t!="symbol"?t+"":t,e),e);class b extends m.A{constructor(t){super({className:"login-field",tag:"label",textContent:t}),p(this,"errorText"),p(this,"input");const e=t.toLowerCase().split(" ").join("-");this.input=(0,r.hF)({className:"login-field__input",name:e,type:"text",required:!0}),this.errorText=(0,r.Ln)({className:"login-field__error-text"}),this.appendChildren([this.input,this.errorText])}getInputNode(){return this.input.getNode()}getInputValue(){return this.input.getNode().value}setErrorText(t){this.errorText.getNode().textContent=t}setInputAttribute(t,e){this.input.setAttribute(t,e)}}var E=s(182),v=Object.defineProperty,A=(i,t,e)=>t in i?v(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e,o=(i,t,e)=>(A(i,typeof t!="symbol"?t+"":t,e),e),C=(i=>(i[i.NAME=3]="NAME",i[i.SURNAME=4]="SURNAME",i))(C||{});class u extends m.A{constructor(t,e){super({className:"app-container__page login-page"}),o(this,"router"),o(this,"storage"),o(this,"submitButton"),o(this,"nameField"),o(this,"surnameField"),o(this,"onSubmitButtonClick",l=>{l&&l.preventDefault(),this.areFieldsValid()&&(this.storage.setField("loginData",{name:this.nameField.getInputValue(),surname:this.surnameField.getInputValue()}),this.router.navigate(E.b.START))}),this.router=t,this.storage=e,this.nameField=new b("First Name:"),this.nameField.addClass("login-page__field"),this.nameField.setInputAttribute("autofocus",""),this.nameField.addListener("input",this.onFieldInput.bind(this)),this.surnameField=new b("Surname:"),this.surnameField.addClass("login-page__field"),this.surnameField.addListener("input",this.onFieldInput.bind(this)),this.submitButton=(0,h.A)({className:"login-page__submit-button button",textContent:"Login",buttonType:"submit",clickHandler:this.onSubmitButtonClick}),this.submitButton.setAttribute("disabled","");const n=(0,r.h1)("visually-hidden","Word puzzle application"),a=(0,r.Zd)({className:"login-page__form",method:"post"},this.nameField,this.surnameField,this.submitButton),F=(0,r.iW)({className:"login-page__main"},n,a);this.appendChildren([F])}onFieldInput(t){const e=this.nameField.getInputValue(),n=this.surnameField.getInputValue();e&&n?this.submitButton.removeAttribute("disabled"):this.submitButton.setAttribute("disabled",""),this.nameField.getNode()===t.currentTarget?(this.nameField.setErrorText(""),this.nameField.removeClass("login-field--error")):(this.surnameField.setErrorText(""),this.surnameField.removeClass("login-field--error"))}static getFieldValidationErrors(t,e,n){var a;const F=/^[a-zA-Z-]*$/;let l="";return F.test(e)||(l+=`${t} must contain only English letters and hyphens`),e[0]!==((a=e[0])==null?void 0:a.toUpperCase())&&(l+=`${t} must start with an uppercase letter`),e.length<n&&(l+=`${t} must be at least ${n} characters long`),l.split(t).join(`
\u2981  ${t}`).trim()}static updateFieldErrorState(t,e){e&&(t.setErrorText(e),t.addClass("login-field--error"))}areFieldsValid(){const t=this.nameField.getInputValue(),e=this.surnameField.getInputValue(),n=u.getFieldValidationErrors("First Name",t,3),a=u.getFieldValidationErrors("Surname",e,4);return u.updateFieldErrorState(this.nameField,n),u.updateFieldErrorState(this.surnameField,a),!n&&!a}}}}]);
